import emailjs from "@emailjs/browser";

// C·∫•u h√¨nh EmailJS
const EMAILJS_CONFIG = {
  SERVICE_ID: "service_qi4c4fw",
  TEMPLATE_ID: "template_mk5ebrk",
  PUBLIC_KEY: "Swpu9Iyd6YA9wadVX", // ‚ö†Ô∏è C·∫¶N THAY B·∫∞NG PUBLIC KEY TH·∫¨T
};

// Function chung ƒë·ªÉ chuy·ªÉn ƒë·ªïi status
const getStatusText = (status: string) => {
  const statusMap: { [key: string]: string } = {
    'pending': 'Ch·ªù x·ª≠ l√Ω',
    'shipping': 'ƒêang giao h√†ng',
    'completed': 'ƒê√£ giao h√†ng',
    'canceled': 'ƒê√£ h·ªßy',
    'confirmed': 'ƒê√£ x√°c nh·∫≠n',
    'delivered': 'ƒê√£ giao h√†ng',
    'cancelled': 'ƒê√£ h·ªßy',
    'paid': 'ƒê√£ thanh to√°n',
    'processing': 'ƒêang x·ª≠ l√Ω'
  };
  return statusMap[status] || 'Ch·ªù x·ª≠ l√Ω';
};

// Function chung ƒë·ªÉ t·∫°o message cho status
const getStatusMessage = (status: string) => {
  const messageMap: { [key: string]: string } = {
    'pending': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ch·ªù x·ª≠ l√Ω. Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o khi c√≥ c·∫≠p nh·∫≠t.',
    'shipping': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c giao. Vui l√≤ng chu·∫©n b·ªã nh·∫≠n h√†ng.',
    'completed': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng. C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng!',
    'canceled': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy. N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá ch√∫ng t√¥i.',
    'confirmed': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n v√† ƒëang ƒë∆∞·ª£c chu·∫©n b·ªã ƒë·ªÉ giao h√†ng.',
    'delivered': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng. C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng!',
    'cancelled': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy. N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá ch√∫ng t√¥i.',
    'paid': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thanh to√°n th√†nh c√¥ng.',
    'processing': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω thanh to√°n.'
  };
  return messageMap[status] || 'Tr·∫°ng th√°i ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.';
};

// G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng
export const sendOrderConfirmationEmail = async (orderData: any) => {
  try {
<<<<<<< HEAD
    console.log("üìß Starting email send...");
    console.log("üìß Order data:", orderData);

    // T·∫°o HTML cho danh s√°ch s·∫£n ph·∫©m
    const productsHtml =
      orderData.items
        ?.map(
          (item: any) => `
      <tr style="border-bottom: 1px solid #eee;">
        <td style="padding: 10px; text-align: center;">
          <img src="${item.img_url || ""}" alt="${
            item.name
          }" style="width: 50px; height: 50px; object-fit: cover; border-radius: 5px;">
        </td>
        <td style="padding: 10px;">${item.name}</td>
        <td style="padding: 10px; text-align: center;">${item.quantity}</td>
        <td style="padding: 10px; text-align: right;">${item.price?.toLocaleString(
          "vi-VN"
        )} VNƒê</td>
        <td style="padding: 10px; text-align: right;">${(
          item.price * item.quantity
        )?.toLocaleString("vi-VN")} VNƒê</td>
      </tr>
    `
        )
        .join("") || "";
=======
    console.log('üìß Starting email send...');
    console.log('üìß Order data:', orderData);
    
    // T·∫°o danh s√°ch s·∫£n ph·∫©m d∆∞·ªõi d·∫°ng text thu·∫ßn t√∫y
    const productsText = orderData.items?.map((item: any, index: number) => 
      `${index + 1}. ${item.name}
S·ªë l∆∞·ª£ng: ${item.quantity} x ${item.price?.toLocaleString('vi-VN')} VNƒê
Th√†nh ti·ªÅn: ${(item.price * item.quantity)?.toLocaleString('vi-VN')} VNƒê

`
    ).join('') || '';

    // ƒê·∫£m b·∫£o status c√≥ gi√° tr·ªã
    const orderStatus = orderData.status || 'pending';
    const statusText = getStatusText(orderStatus);
>>>>>>> main

    const templateParams = {
      to_email: orderData.customer?.email || orderData.email,
      to_name: orderData.customer?.name || orderData.name,
      order_id: orderData._id || orderData.id,
<<<<<<< HEAD
      order_date: new Date(orderData.created_at || Date.now()).toLocaleString(
        "vi-VN"
      ),
      total_amount: (orderData.total || 0).toLocaleString("vi-VN"),
      customer_address:
        orderData.customer?.address || orderData.address || "N/A",
      customer_phone: orderData.customer?.phone || orderData.phone || "N/A",
      payment_method:
        orderData.payment_method === "cod"
          ? "Thanh to√°n khi nh·∫≠n h√†ng"
          : "Chuy·ªÉn kho·∫£n ng√¢n h√†ng",
      status:
        orderData.status === "pending"
          ? "ƒêang x·ª≠ l√Ω"
          : orderData.status === "paid"
          ? "ƒê√£ thanh to√°n"
          : orderData.status,
=======
      order_date: new Date(orderData.created_at || Date.now()).toLocaleString('vi-VN'),
      total_amount: (orderData.total || 0).toLocaleString('vi-VN'),
      customer_address: orderData.customer?.address || orderData.address || 'N/A',
      customer_phone: orderData.customer?.phone || orderData.phone || 'N/A',
      payment_method: orderData.payment_method === 'cod' ? 'Thanh to√°n khi nh·∫≠n h√†ng' : 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
      status: statusText,
>>>>>>> main
      // Th√™m c√°c bi·∫øn ph·ª• ƒë·ªÉ ƒë·∫£m b·∫£o
      email: orderData.customer?.email || orderData.email,
      name: orderData.customer?.name || orderData.name,
      phone: orderData.customer?.phone || orderData.phone,
      address: orderData.customer?.address || orderData.address,
      // Th√™m danh s√°ch s·∫£n ph·∫©m
<<<<<<< HEAD
      products_html: productsHtml,
      products_count: orderData.items?.length || 0,
    };

    console.log("üìß Template params:", templateParams);
=======
      products_text: productsText,
      products_count: orderData.items?.length || 0
    };

    console.log('üìß Template params:', templateParams);
    console.log('üìß Status:', orderStatus, '->', statusText);
    console.log('üìß Products Text:', productsText);
>>>>>>> main

    const response = await emailjs.send(
      EMAILJS_CONFIG.SERVICE_ID,
      EMAILJS_CONFIG.TEMPLATE_ID,
      templateParams,
      EMAILJS_CONFIG.PUBLIC_KEY
    );

    console.log("‚úÖ Email sent successfully:", response);
    return { success: true, data: response };
  } catch (error) {
    console.error("‚ùå Email error:", error);
    return { success: false, error };
  }
};

// G·ª≠i email c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng
export const sendOrderStatusUpdateEmail = async (orderData: any, oldStatus: string, newStatus: string) => {
  try {
<<<<<<< HEAD
    console.log("üß™ Testing simple email to:", email);

    const testData = {
      to_email: email,
      to_name: "Test User",
      message: "This is a test email from 5AnhEmPC",
      email: email,
      name: "Test User",
    };

    console.log("üìß Test data:", testData);
=======
    console.log('üìß Starting status update email...');
    console.log('üìß Order data:', orderData);
    console.log('üìß Status change:', oldStatus, '->', newStatus);
    
    // T·∫°o danh s√°ch s·∫£n ph·∫©m d∆∞·ªõi d·∫°ng text thu·∫ßn t√∫y
    const productsText = orderData.items?.map((item: any, index: number) => 
      `${index + 1}. ${item.name}
S·ªë l∆∞·ª£ng: ${item.quantity} x ${item.price?.toLocaleString('vi-VN')} VNƒê
Th√†nh ti·ªÅn: ${(item.price * item.quantity)?.toLocaleString('vi-VN')} VNƒê

`
    ).join('') || '';

    // ƒê·∫£m b·∫£o status c√≥ gi√° tr·ªã
    const oldStatusText = getStatusText(oldStatus);
    const newStatusText = getStatusText(newStatus);

    const templateParams = {
      to_email: orderData.customer?.email || orderData.email,
      to_name: orderData.customer?.name || orderData.name,
      order_id: orderData._id || orderData.id,
      order_date: new Date(orderData.created_at || Date.now()).toLocaleString('vi-VN'),
      total_amount: (orderData.total || 0).toLocaleString('vi-VN'),
      customer_address: orderData.customer?.address || orderData.address || 'N/A',
      customer_phone: orderData.customer?.phone || orderData.phone || 'N/A',
      payment_method: orderData.payment_method === 'cod' ? 'Thanh to√°n khi nh·∫≠n h√†ng' : 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
      old_status: oldStatusText,
      new_status: newStatusText,
      status: newStatusText, // Th√™m status m·ªõi
      status_message: getStatusMessage(newStatus),
      // Th√™m c√°c bi·∫øn ph·ª• ƒë·ªÉ ƒë·∫£m b·∫£o
      email: orderData.customer?.email || orderData.email,
      name: orderData.customer?.name || orderData.name,
      phone: orderData.customer?.phone || orderData.phone,
      address: orderData.customer?.address || orderData.address,
      // Th√™m danh s√°ch s·∫£n ph·∫©m
      products_text: productsText,
      products_count: orderData.items?.length || 0
    };

    console.log('üìß Template params:', templateParams);
    console.log('üìß Status change:', oldStatusText, '->', newStatusText);
    console.log('üìß Products Text:', productsText);
>>>>>>> main

    const response = await emailjs.send(
      EMAILJS_CONFIG.SERVICE_ID,
      EMAILJS_CONFIG.TEMPLATE_ID,
      templateParams,
      EMAILJS_CONFIG.PUBLIC_KEY
    );

<<<<<<< HEAD
    console.log("‚úÖ Simple test email sent:", response);
    return { success: true, data: response };
  } catch (error) {
    console.error("‚ùå Simple test email error:", error);
=======
    console.log('‚úÖ Status update email sent successfully:', response);
    return { success: true, data: response };
  } catch (error) {
    console.error('‚ùå Status update email error:', error);
>>>>>>> main
    return { success: false, error };
  }
};
